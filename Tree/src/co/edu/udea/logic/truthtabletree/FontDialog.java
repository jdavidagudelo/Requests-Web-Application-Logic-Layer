
package co.edu.udea.logic.truthtabletree;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.Serializable;
import javax.swing.JList;
import javax.swing.JToggleButton;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
public class FontDialog extends javax.swing.JFrame implements ListSelectionListener, ActionListener, Serializable
{
    public static final int ACEPTAR = 0;
    public static final int CANCELAR = 1;
    /**
     * Indica en que boton se hizo clic
     */
    private int resultado = ACEPTAR;
    private Font fuentes[] = null;
    private String nombresFuentes[] = null;
    /** Creates new form FontDialog */
    public FontDialog()
    {
        initComponents();
        inicializarComponentes();
    }
    private void inicializarComponentes()
    {
        fuentes = GraphicsEnvironment.getLocalGraphicsEnvironment().getAllFonts();
        nombresFuentes = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
        fontsList.removeAll();
        fontsList.setFont(new Font(nombresFuentes[0], Font.BOLD, 20));
        fontsList.setListData(nombresFuentes);
        fontsList.addListSelectionListener(this);
        fontSizes.addListSelectionListener(this);
        botonAceptar.addActionListener(this);
        botonCancelar.addActionListener(this);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        fontsList = new javax.swing.JList();
        textoFuente = new javax.swing.JTextField();
        fontSize = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        fontSizes = new javax.swing.JList();
        botonAceptar = new javax.swing.JToggleButton();
        botonCancelar = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(fontsList);

        fontSizes.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "8", "9", "10", "11", "12", "14", "16", "18", "20", "22", "24", "26", "28", "36", "48", "72" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(fontSizes);

        botonAceptar.setText("Aceptar");

        botonCancelar.setText("Cancelar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonAceptar)
                    .addComponent(textoFuente, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(fontSize)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                    .addComponent(botonCancelar))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoFuente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fontSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAceptar)
                    .addComponent(botonCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FontDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton botonAceptar;
    private javax.swing.JToggleButton botonCancelar;
    private javax.swing.JSpinner fontSize;
    private javax.swing.JList fontSizes;
    private javax.swing.JList fontsList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField textoFuente;
    // End of variables declaration//GEN-END:variables

    public void valueChanged(ListSelectionEvent e)
    {
        if(e.getSource() instanceof JList)
        {
            JList actual = (JList)e.getSource();
            if(actual == fontsList)
            {
                textoFuente.setText(nombresFuentes[fontsList.getSelectedIndex()]);
            }
            if(actual == fontSizes)
            {
                fontSize.setValue(Integer.parseInt(fontSizes.getSelectedValue().toString()));
            }
        }
    }
    public int getResultado()
    {
        return resultado;
    }
    public void setResultado(int resultado)
    {
        this.resultado = resultado;
    }
    public void setFuente(Font fuente)
    {
        int i = 0;
        while(i < nombresFuentes.length && !nombresFuentes[i].equals(fuente.getFontName()))
        {
            i = i + 1;
        }
        if(i < nombresFuentes.length)
        {
            fontsList.setSelectedIndex(i);
        }
        textoFuente.setText(fuente.getFontName());
    }
    public void setFontSize(int fontSize)
    {
        this.fontSize.setValue(fontSize);
    }
    public Font getFuente()
    {
        if(fontsList.getSelectedIndex() < 0)
        {
            return null;
        }
        String s = fontsList.getSelectedValue().toString();
        int i = 0;
        while(i < fuentes.length && !s.equals(fuentes[i].getName()))
        {
            i = i + 1;
        }
        return i < fuentes.length? fuentes[i].deriveFont(Float.parseFloat(fontSize.getValue().toString())) : null;
    }

    public void actionPerformed(ActionEvent e)
    {
        if(e.getSource() instanceof JToggleButton)
        {
            JToggleButton b = (JToggleButton)e.getSource();
            if(b == botonAceptar)
            {
                resultado = ACEPTAR;
                this.setVisible(false);
            }
            if(b == botonCancelar)
            {
                resultado = CANCELAR;
                this.setVisible(false);
            }
        }
    }
}
